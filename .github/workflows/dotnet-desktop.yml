# This workflow will build, test, and upload the test results of all defined NUnit tests in a repo.
# Ensure that the env variables are set correctly, this workflow currently assumes a namespace at KotorDotNET.Tests exists.

name: .NET Core Desktop

on:
  push:
    branches:
      - '*'

jobs:
  build:
    strategy:
      matrix:
        configuration: [Release]

    runs-on: windows-latest

    env:
      Solution_Name: KotorDotNET
      Test_Project_Path: KotorDotNET.Tests\KotorDotNET.Tests.csproj

    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0

    - name: Install .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 6.0.x

    - name: Setup MSBuild.exe
      uses: microsoft/setup-msbuild@v1.0.2

    - name: Execute unit tests
      run: |
        $date = Get-Date -Format yyyy-MM-dd
        dotnet test --logger "trx;LogFileName=test_results_$date.xml" --results-directory TestResults
      continue-on-error: true

    - name: Summarize test results
      run: |
        dotnet tool install --global trx2junit
        $date = Get-Date -Format yyyy-MM-dd
        trx2junit "TestResults/test_results_$date.xml" --output "TestResults/summary_$date.xml"

    - name: Modify test results XML
      uses: actions/github-script@v4
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const fs = require('fs');
          const process = require('process');
          const commitHash = process.env.GITHUB_SHA;
          const date = new Date().toISOString().split('T')[0];
          const filePath = 'TestResults/test_results_' + date + '.xml';
          let xmlContent = fs.readFileSync(filePath, 'utf8');
          xmlContent = xmlContent.replace('<test-run', `<test-run commit-hash="${commitHash}"`);

          fs.writeFileSync(filePath, xmlContent);

    - name: Generate date
      id: generate-date
      run: |
        $date = Get-Date -Format yyyy-MM-dd
        echo "::set-output name=date::$date"

    - name: Upload summary
      uses: actions/upload-artifact@v2
      with:
        name: Test Summary
        path: |
          TestResults/summary_${{ steps.generate-date.outputs.date }}.xml
          TestResults/test_results_${{ steps.generate-date.outputs.date }}.xml


