// This code was generated by the Gardens Point Parser Generator
// Copyright (c) Wayne Kelly, John Gough, QUT 2005-2014
// (see accompanying GPPGcopyright.rtf)

// GPPG version 1.5.2
// DateTime: 3/02/2024 12:04:22 AM
// Input file <Calculator\Calculator.Language.grammar.y - 2/02/2024 11:51:13 PM>

// options: no-lines gplex

using System;
using System.Collections.Generic;
using System.CodeDom.Compiler;
using System.Globalization;
using System.Text;
using QUT.Gppg;
using Kotor.NET.Compiler.Compilation;

namespace Kotor.NET.Compiler.Calculator
{
internal enum Token {
    error=127,EOF=128,EOL=129,NOP=130,COMMENT_INLINE=131,COMMENT_MULTILINE=132,
    INCLUDE=133,VALUE_OBJECT_SELF=134,VALUE_OBJECT_INVALID=135,VALUE_TRUE=136,VALUE_FALSE=137,FLOW_BREAK=138,
    FLOW_CONTINUE=139,FLOW_CASE=140,FLOW_DEFAULT=141,FLOW_DO=142,FLOW_ELSE=143,FLOW_SWITCH=144,
    FLOW_FOR=145,FLOW_IF=146,FLOW_RETURN=147,TYPE_STRUCT=148,TYPE_INT=149,TYPE_FLOAT=150,
    TYPE_OBJECT=151,TYPE_VOID=152,TYPE_EVENT=153,TYPE_EFFECT=154,TYPE_ITEM_PROPERTY=155,TYPE_LOCATION=156,
    TYPE_STRING=157,TYPE_TALENT=158,TYPE_ACTION=159,TYPE_VECTOR=160,IDENTIFIER=161,LITERAL_STRING=162,
    LITERAL_FLOAT=163,LITERAL_INT_HEX=164,LITERAL_INT=165,OP_INCREMENT=166,OP_DECREMENT=167,ASSIGNMENT_ADD=168,
    ASSIGNMENT_SUBTRACT=169,ASSIGNMENT_DIVISION=170,OP_BITWISE_LEFT=171,OP_BITWISE_RIGHT=172,OP_ADD=173,OP_SUBTRACT=174,
    OP_MULTIPLY=175,OP_DIVIDE=176,OP_EQUALITY=177,OP_INEQUALITY=178,OP_GREATER_THAN_OR_EQUAL=179,OP_GREATER_THAN=180,
    OP_LESS_THAN_OR_EQUAL=181,OP_LESS_THAN=182,OP_LOGICAL_AND=183,OP_LOGICAL_OR=184,OP_NOT=185,OP_BITWISE_AND=186,
    OP_BITWISE_OR=187,OP_BITWISE_XOR=188,OP_BITWISE_NOT=189,OP_MODULUS=190,ASSIGNMENT_MULTIPLY=191,FLOW_WHILE=192};

internal partial struct ValueType
{ 
       public object node;
       public string text;
       public float numberf;
       public int numberi;
       public DataType datatype;
       }
// Abstract base class for GPLEX scanners
[GeneratedCodeAttribute( "Gardens Point Parser Generator", "1.5.2")]
internal abstract class ScanBase : AbstractScanner<ValueType,LexLocation> {
  private LexLocation __yylloc = new LexLocation();
  public override LexLocation yylloc { get { return __yylloc; } set { __yylloc = value; } }
  protected virtual bool yywrap() { return true; }
}

// Utility class for encapsulating token information
[GeneratedCodeAttribute( "Gardens Point Parser Generator", "1.5.2")]
internal class ScanObj {
  public int token;
  public ValueType yylval;
  public LexLocation yylloc;
  public ScanObj( int t, ValueType val, LexLocation loc ) {
    this.token = t; this.yylval = val; this.yylloc = loc;
  }
}

[GeneratedCodeAttribute( "Gardens Point Parser Generator", "1.5.2")]
internal partial class CalculatorParser: ShiftReduceParser<ValueType, LexLocation>
{
#pragma warning disable 649
  private static Dictionary<int, string> aliases;
#pragma warning restore 649
  private static Rule[] rules = new Rule[135];
  private static State[] states = new State[246];
  private static string[] nonTerms = new string[] {
      "compilation_unit", "$accept", "declarations", "declaration", "global_variable_declaration", 
      "script_inclusion", "global_variable_initialization", "function_definition", 
      "function_forward_declaration", "struct_definition", "data_type", "expression", 
      "function_definition_params", "code_block", "function_definition_param", 
      "statement", "scoped_block", "struct_member", "struct_members", "declaration_statement", 
      "condition_statement", "return_statement", "while_statement", "do_statement", 
      "for_statement", "switch_statement", "break_statement", "continue_statement", 
      "variable_declarators", "if_statement", "else_if_statements", "else_statement", 
      "switch_blocks", "variable_declarator", "switch_block", "switch_labels", 
      "block_statements", "switch_label", "function_call", "argument_list", "assignment", 
      "field_access", "constant_expression", };

  static CalculatorParser() {
    states[0] = new State(new int[]{149,121,150,122,151,123,152,124,153,125,154,126,155,127,156,128,157,129,158,130,160,131,159,132,148,232,133,239,128,-3},new int[]{-1,1,-3,3,-4,245,-5,5,-11,6,-6,238,-7,241,-8,242,-9,243,-10,244});
    states[1] = new State(new int[]{128,2});
    states[2] = new State(-1);
    states[3] = new State(new int[]{149,121,150,122,151,123,152,124,153,125,154,126,155,127,156,128,157,129,158,130,160,131,159,132,148,232,133,239,128,-2},new int[]{-4,4,-5,5,-11,6,-6,238,-7,241,-8,242,-9,243,-10,244});
    states[4] = new State(-4);
    states[5] = new State(-6);
    states[6] = new State(new int[]{161,7});
    states[7] = new State(new int[]{59,8,61,9,40,103});
    states[8] = new State(-12);
    states[9] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,10,-41,50,-42,51,-39,62,-43,63});
    states[10] = new State(new int[]{59,11,180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45});
    states[11] = new State(-13);
    states[12] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,13,-41,50,-42,51,-39,62,-43,63});
    states[13] = new State(new int[]{180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45,59,-84,41,-84,44,-84,58,-84});
    states[14] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,15,-41,50,-42,51,-39,62,-43,63});
    states[15] = new State(new int[]{180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45,59,-85,41,-85,44,-85,58,-85});
    states[16] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,17,-41,50,-42,51,-39,62,-43,63});
    states[17] = new State(new int[]{180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45,59,-86,41,-86,44,-86,58,-86});
    states[18] = new State(-87);
    states[19] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,20,-41,50,-42,51,-39,62,-43,63});
    states[20] = new State(new int[]{180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45,59,-88,41,-88,44,-88,58,-88});
    states[21] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,22,-41,50,-42,51,-39,62,-43,63});
    states[22] = new State(new int[]{180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45,59,-89,41,-89,44,-89,58,-89});
    states[23] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,24,-41,50,-42,51,-39,62,-43,63});
    states[24] = new State(new int[]{180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45,59,-90,41,-90,44,-90,58,-90});
    states[25] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,26,-41,50,-42,51,-39,62,-43,63});
    states[26] = new State(new int[]{180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45,59,-91,41,-91,44,-91,58,-91});
    states[27] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,28,-41,50,-42,51,-39,62,-43,63});
    states[28] = new State(new int[]{180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45,59,-92,41,-92,44,-92,58,-92});
    states[29] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,30,-41,50,-42,51,-39,62,-43,63});
    states[30] = new State(new int[]{180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45,59,-93,41,-93,44,-93,58,-93});
    states[31] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,32,-41,50,-42,51,-39,62,-43,63});
    states[32] = new State(new int[]{180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45,59,-94,41,-94,44,-94,58,-94});
    states[33] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,34,-41,50,-42,51,-39,62,-43,63});
    states[34] = new State(new int[]{180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45,59,-95,41,-95,44,-95,58,-95});
    states[35] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,36,-41,50,-42,51,-39,62,-43,63});
    states[36] = new State(new int[]{180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45,59,-96,41,-96,44,-96,58,-96});
    states[37] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,38,-41,50,-42,51,-39,62,-43,63});
    states[38] = new State(new int[]{180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45,59,-97,41,-97,44,-97,58,-97});
    states[39] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,40,-41,50,-42,51,-39,62,-43,63});
    states[40] = new State(new int[]{180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45,59,-98,41,-98,44,-98,58,-98});
    states[41] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,42,-41,50,-42,51,-39,62,-43,63});
    states[42] = new State(new int[]{180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45,59,-99,41,-99,44,-99,58,-99});
    states[43] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,44,-41,50,-42,51,-39,62,-43,63});
    states[44] = new State(new int[]{180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45,59,-100,41,-100,44,-100,58,-100});
    states[45] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,46,-41,50,-42,51,-39,62,-43,63});
    states[46] = new State(new int[]{180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45,59,-101,41,-101,44,-101,58,-101});
    states[47] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,48,-41,50,-42,51,-39,62,-43,63});
    states[48] = new State(new int[]{41,49,180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45});
    states[49] = new State(-79);
    states[50] = new State(-80);
    states[51] = new State(new int[]{168,52,46,80,169,93,191,95,170,97,61,99,166,101,167,102,59,-110,180,-110,179,-110,182,-110,181,-110,183,-110,178,-110,177,-110,184,-110,173,-110,174,-110,175,-110,176,-110,187,-110,188,-110,186,-110,171,-110,172,-110,190,-110,41,-110,44,-110,58,-110});
    states[52] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,53,-41,50,-42,51,-39,62,-43,63});
    states[53] = new State(new int[]{180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45,59,-74,41,-74,44,-74,58,-74});
    states[54] = new State(new int[]{46,55,40,57,168,-132,169,-132,191,-132,170,-132,61,-132,166,-132,167,-132,59,-81,180,-81,179,-81,182,-81,181,-81,183,-81,178,-81,177,-81,184,-81,173,-81,174,-81,175,-81,176,-81,187,-81,188,-81,186,-81,171,-81,172,-81,190,-81,41,-81,44,-81,58,-81});
    states[55] = new State(new int[]{161,56});
    states[56] = new State(-133);
    states[57] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-40,58,-12,92,-41,50,-42,51,-39,62,-43,63});
    states[58] = new State(new int[]{41,59,44,60});
    states[59] = new State(-71);
    states[60] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,61,-41,50,-42,51,-39,62,-43,63});
    states[61] = new State(new int[]{180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45,41,-72,44,-72});
    states[62] = new State(-82);
    states[63] = new State(-83);
    states[64] = new State(-111);
    states[65] = new State(-112);
    states[66] = new State(-113);
    states[67] = new State(-114);
    states[68] = new State(-115);
    states[69] = new State(-116);
    states[70] = new State(-117);
    states[71] = new State(-118);
    states[72] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,73,-41,50,-42,51,-39,62,-43,63});
    states[73] = new State(new int[]{180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45,59,-102,41,-102,44,-102,58,-102});
    states[74] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,75,-41,50,-42,51,-39,62,-43,63});
    states[75] = new State(new int[]{180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45,59,-103,41,-103,44,-103,58,-103});
    states[76] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,77,-41,50,-42,51,-39,62,-43,63});
    states[77] = new State(new int[]{180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45,59,-104,41,-104,44,-104,58,-104});
    states[78] = new State(new int[]{161,82},new int[]{-42,79});
    states[79] = new State(new int[]{46,80,59,-105,180,-105,179,-105,182,-105,181,-105,183,-105,178,-105,177,-105,184,-105,173,-105,174,-105,175,-105,176,-105,187,-105,188,-105,186,-105,171,-105,172,-105,190,-105,41,-105,44,-105,58,-105});
    states[80] = new State(new int[]{161,81});
    states[81] = new State(-134);
    states[82] = new State(new int[]{46,55,59,-132,180,-132,179,-132,182,-132,181,-132,183,-132,178,-132,177,-132,184,-132,173,-132,174,-132,175,-132,176,-132,187,-132,188,-132,186,-132,171,-132,172,-132,190,-132,41,-132,44,-132,58,-132});
    states[83] = new State(new int[]{161,82},new int[]{-42,84});
    states[84] = new State(new int[]{46,80,59,-107,180,-107,179,-107,182,-107,181,-107,183,-107,178,-107,177,-107,184,-107,173,-107,174,-107,175,-107,176,-107,187,-107,188,-107,186,-107,171,-107,172,-107,190,-107,41,-107,44,-107,58,-107});
    states[85] = new State(new int[]{163,86});
    states[86] = new State(new int[]{44,87});
    states[87] = new State(new int[]{163,88});
    states[88] = new State(new int[]{44,89});
    states[89] = new State(new int[]{163,90});
    states[90] = new State(new int[]{93,91});
    states[91] = new State(-109);
    states[92] = new State(new int[]{180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45,41,-73,44,-73});
    states[93] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,94,-41,50,-42,51,-39,62,-43,63});
    states[94] = new State(new int[]{180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45,59,-75,41,-75,44,-75,58,-75});
    states[95] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,96,-41,50,-42,51,-39,62,-43,63});
    states[96] = new State(new int[]{180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45,59,-76,41,-76,44,-76,58,-76});
    states[97] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,98,-41,50,-42,51,-39,62,-43,63});
    states[98] = new State(new int[]{180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45,59,-77,41,-77,44,-77,58,-77});
    states[99] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,100,-41,50,-42,51,-39,62,-43,63});
    states[100] = new State(new int[]{180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45,59,-78,41,-78,44,-78,58,-78});
    states[101] = new State(-106);
    states[102] = new State(-108);
    states[103] = new State(new int[]{149,121,150,122,151,123,152,124,153,125,154,126,155,127,156,128,157,129,158,130,160,131,159,132,148,133,41,-19,44,-19},new int[]{-13,104,-15,231,-11,227});
    states[104] = new State(new int[]{41,105,44,225});
    states[105] = new State(new int[]{123,106,59,224});
    states[106] = new State(-23,new int[]{-14,107});
    states[107] = new State(new int[]{125,108,59,110,149,121,150,122,151,123,152,124,153,125,154,126,155,127,156,128,157,129,158,130,160,131,159,132,148,133,146,143,147,151,192,156,142,161,145,171,144,183,138,195,139,198,123,201,40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-16,109,-20,111,-11,112,-21,135,-30,136,-22,150,-23,155,-24,160,-25,170,-26,182,-27,194,-28,197,-17,200,-12,204,-41,50,-42,51,-39,62,-43,63});
    states[108] = new State(-15);
    states[109] = new State(-22);
    states[110] = new State(-29);
    states[111] = new State(-30);
    states[112] = new State(new int[]{161,117},new int[]{-29,113,-34,120});
    states[113] = new State(new int[]{59,114,44,115});
    states[114] = new State(-41);
    states[115] = new State(new int[]{161,117},new int[]{-34,116});
    states[116] = new State(-57);
    states[117] = new State(new int[]{61,118,59,-59,44,-59});
    states[118] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,119,-41,50,-42,51,-39,62,-43,63});
    states[119] = new State(new int[]{180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45,59,-60,44,-60});
    states[120] = new State(-58);
    states[121] = new State(-119);
    states[122] = new State(-120);
    states[123] = new State(-121);
    states[124] = new State(-122);
    states[125] = new State(-123);
    states[126] = new State(-124);
    states[127] = new State(-125);
    states[128] = new State(-126);
    states[129] = new State(-127);
    states[130] = new State(-128);
    states[131] = new State(-129);
    states[132] = new State(-130);
    states[133] = new State(new int[]{161,134});
    states[134] = new State(-131);
    states[135] = new State(-31);
    states[136] = new State(new int[]{143,215},new int[]{-31,137});
    states[137] = new State(new int[]{143,139},new int[]{-32,138});
    states[138] = new State(-42);
    states[139] = new State(new int[]{123,140,59,110,149,121,150,122,151,123,152,124,153,125,154,126,155,127,156,128,157,129,158,130,160,131,159,132,148,133,146,143,147,151,192,156,142,161,145,171,144,183,138,195,139,198,40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-16,214,-20,111,-11,112,-21,135,-30,136,-22,150,-23,155,-24,160,-25,170,-26,182,-27,194,-28,197,-17,200,-12,204,-41,50,-42,51,-39,62,-43,63});
    states[140] = new State(-23,new int[]{-14,141});
    states[141] = new State(new int[]{125,142,59,110,149,121,150,122,151,123,152,124,153,125,154,126,155,127,156,128,157,129,158,130,160,131,159,132,148,133,146,143,147,151,192,156,142,161,145,171,144,183,138,195,139,198,123,201,40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-16,109,-20,111,-11,112,-21,135,-30,136,-22,150,-23,155,-24,160,-25,170,-26,182,-27,194,-28,197,-17,200,-12,204,-41,50,-42,51,-39,62,-43,63});
    states[142] = new State(-24);
    states[143] = new State(new int[]{40,144});
    states[144] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,145,-41,50,-42,51,-39,62,-43,63});
    states[145] = new State(new int[]{41,146,180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45});
    states[146] = new State(new int[]{123,147,59,110,149,121,150,122,151,123,152,124,153,125,154,126,155,127,156,128,157,129,158,130,160,131,159,132,148,133,146,143,147,151,192,156,142,161,145,171,144,183,138,195,139,198,40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-16,213,-20,111,-11,112,-21,135,-30,136,-22,150,-23,155,-24,160,-25,170,-26,182,-27,194,-28,197,-17,200,-12,204,-41,50,-42,51,-39,62,-43,63});
    states[147] = new State(-23,new int[]{-14,148});
    states[148] = new State(new int[]{125,149,59,110,149,121,150,122,151,123,152,124,153,125,154,126,155,127,156,128,157,129,158,130,160,131,159,132,148,133,146,143,147,151,192,156,142,161,145,171,144,183,138,195,139,198,123,201,40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-16,109,-20,111,-11,112,-21,135,-30,136,-22,150,-23,155,-24,160,-25,170,-26,182,-27,194,-28,197,-17,200,-12,204,-41,50,-42,51,-39,62,-43,63});
    states[149] = new State(-24);
    states[150] = new State(-32);
    states[151] = new State(new int[]{59,152,40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,153,-41,50,-42,51,-39,62,-43,63});
    states[152] = new State(-49);
    states[153] = new State(new int[]{59,154,180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45});
    states[154] = new State(-50);
    states[155] = new State(-33);
    states[156] = new State(new int[]{40,157});
    states[157] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,158,-41,50,-42,51,-39,62,-43,63});
    states[158] = new State(new int[]{41,159,180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45});
    states[159] = new State(-54);
    states[160] = new State(-34);
    states[161] = new State(new int[]{123,162});
    states[162] = new State(-23,new int[]{-14,163});
    states[163] = new State(new int[]{125,164,59,110,149,121,150,122,151,123,152,124,153,125,154,126,155,127,156,128,157,129,158,130,160,131,159,132,148,133,146,143,147,151,192,156,142,161,145,171,144,183,138,195,139,198,123,201,40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-16,109,-20,111,-11,112,-21,135,-30,136,-22,150,-23,155,-24,160,-25,170,-26,182,-27,194,-28,197,-17,200,-12,204,-41,50,-42,51,-39,62,-43,63});
    states[164] = new State(new int[]{192,165});
    states[165] = new State(new int[]{40,166});
    states[166] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,167,-41,50,-42,51,-39,62,-43,63});
    states[167] = new State(new int[]{41,168,180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45});
    states[168] = new State(new int[]{59,169});
    states[169] = new State(-55);
    states[170] = new State(-35);
    states[171] = new State(new int[]{40,172});
    states[172] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,173,-41,50,-42,51,-39,62,-43,63});
    states[173] = new State(new int[]{59,174,180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45});
    states[174] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,175,-41,50,-42,51,-39,62,-43,63});
    states[175] = new State(new int[]{59,176,180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45});
    states[176] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,177,-41,50,-42,51,-39,62,-43,63});
    states[177] = new State(new int[]{41,178,180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45});
    states[178] = new State(new int[]{123,179});
    states[179] = new State(-23,new int[]{-14,180});
    states[180] = new State(new int[]{125,181,59,110,149,121,150,122,151,123,152,124,153,125,154,126,155,127,156,128,157,129,158,130,160,131,159,132,148,133,146,143,147,151,192,156,142,161,145,171,144,183,138,195,139,198,123,201,40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-16,109,-20,111,-11,112,-21,135,-30,136,-22,150,-23,155,-24,160,-25,170,-26,182,-27,194,-28,197,-17,200,-12,204,-41,50,-42,51,-39,62,-43,63});
    states[181] = new State(-56);
    states[182] = new State(-36);
    states[183] = new State(new int[]{40,184});
    states[184] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,185,-41,50,-42,51,-39,62,-43,63});
    states[185] = new State(new int[]{41,186,180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45});
    states[186] = new State(new int[]{123,187});
    states[187] = new State(-62,new int[]{-33,188});
    states[188] = new State(new int[]{125,189,140,-62,141,-62,59,-62,149,-62,150,-62,151,-62,152,-62,153,-62,154,-62,155,-62,156,-62,157,-62,158,-62,160,-62,159,-62,148,-62,146,-62,147,-62,192,-62,142,-62,145,-62,144,-62,138,-62,139,-62,123,-62,40,-62,161,-62,165,-62,164,-62,163,-62,162,-62,134,-62,135,-62,136,-62,137,-62,174,-62,189,-62,185,-62,166,-62,167,-62,91,-62},new int[]{-35,190,-36,191,-33,206});
    states[189] = new State(-51);
    states[190] = new State(-61);
    states[191] = new State(-70,new int[]{-37,192});
    states[192] = new State(new int[]{59,110,149,121,150,122,151,123,152,124,153,125,154,126,155,127,156,128,157,129,158,130,160,131,159,132,148,133,146,143,147,151,192,156,142,161,145,171,144,183,138,195,139,198,123,201,40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85,125,-63,140,-63,141,-63},new int[]{-16,193,-20,111,-11,112,-21,135,-30,136,-22,150,-23,155,-24,160,-25,170,-26,182,-27,194,-28,197,-17,200,-12,204,-41,50,-42,51,-39,62,-43,63});
    states[193] = new State(-69);
    states[194] = new State(-37);
    states[195] = new State(new int[]{59,196});
    states[196] = new State(-52);
    states[197] = new State(-38);
    states[198] = new State(new int[]{59,199});
    states[199] = new State(-53);
    states[200] = new State(-39);
    states[201] = new State(-23,new int[]{-14,202});
    states[202] = new State(new int[]{125,203,59,110,149,121,150,122,151,123,152,124,153,125,154,126,155,127,156,128,157,129,158,130,160,131,159,132,148,133,146,143,147,151,192,156,142,161,145,171,144,183,138,195,139,198,123,201,40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-16,109,-20,111,-11,112,-21,135,-30,136,-22,150,-23,155,-24,160,-25,170,-26,182,-27,194,-28,197,-17,200,-12,204,-41,50,-42,51,-39,62,-43,63});
    states[203] = new State(-24);
    states[204] = new State(new int[]{59,205,180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45});
    states[205] = new State(-40);
    states[206] = new State(new int[]{140,208,141,211,59,-62,149,-62,150,-62,151,-62,152,-62,153,-62,154,-62,155,-62,156,-62,157,-62,158,-62,160,-62,159,-62,148,-62,146,-62,147,-62,192,-62,142,-62,145,-62,144,-62,138,-62,139,-62,123,-62,40,-62,161,-62,165,-62,164,-62,163,-62,162,-62,134,-62,135,-62,136,-62,137,-62,174,-62,189,-62,185,-62,166,-62,167,-62,91,-62},new int[]{-38,207,-35,190,-36,191,-33,206});
    states[207] = new State(-65);
    states[208] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,209,-41,50,-42,51,-39,62,-43,63});
    states[209] = new State(new int[]{58,210,180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45});
    states[210] = new State(-67);
    states[211] = new State(new int[]{58,212});
    states[212] = new State(-68);
    states[213] = new State(-44);
    states[214] = new State(-48);
    states[215] = new State(new int[]{146,216});
    states[216] = new State(new int[]{40,217});
    states[217] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,218,-41,50,-42,51,-39,62,-43,63});
    states[218] = new State(new int[]{41,219,180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45});
    states[219] = new State(new int[]{123,220,59,110,149,121,150,122,151,123,152,124,153,125,154,126,155,127,156,128,157,129,158,130,160,131,159,132,148,133,146,143,147,151,192,156,142,161,145,171,144,183,138,195,139,198,40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-16,223,-20,111,-11,112,-21,135,-30,136,-22,150,-23,155,-24,160,-25,170,-26,182,-27,194,-28,197,-17,200,-12,204,-41,50,-42,51,-39,62,-43,63});
    states[220] = new State(-23,new int[]{-14,221});
    states[221] = new State(new int[]{125,222,59,110,149,121,150,122,151,123,152,124,153,125,154,126,155,127,156,128,157,129,158,130,160,131,159,132,148,133,146,143,147,151,192,156,142,161,145,171,144,183,138,195,139,198,123,201,40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-16,109,-20,111,-11,112,-21,135,-30,136,-22,150,-23,155,-24,160,-25,170,-26,182,-27,194,-28,197,-17,200,-12,204,-41,50,-42,51,-39,62,-43,63});
    states[222] = new State(-24);
    states[223] = new State(-46);
    states[224] = new State(-16);
    states[225] = new State(new int[]{149,121,150,122,151,123,152,124,153,125,154,126,155,127,156,128,157,129,158,130,160,131,159,132,148,133},new int[]{-15,226,-11,227});
    states[226] = new State(-17);
    states[227] = new State(new int[]{161,228});
    states[228] = new State(new int[]{61,229,41,-20,44,-20});
    states[229] = new State(new int[]{40,47,161,54,165,64,164,65,163,66,162,67,134,68,135,69,136,70,137,71,174,72,189,74,185,76,166,78,167,83,91,85},new int[]{-12,230,-41,50,-42,51,-39,62,-43,63});
    states[230] = new State(new int[]{180,12,179,14,182,16,181,18,183,19,178,21,177,23,184,25,173,27,174,29,175,31,176,33,187,35,188,37,186,39,171,41,172,43,190,45,41,-21,44,-21});
    states[231] = new State(-18);
    states[232] = new State(new int[]{161,233});
    states[233] = new State(new int[]{149,121,150,122,151,123,152,124,153,125,154,126,155,127,156,128,157,129,158,130,160,131,159,132,148,133,161,-131},new int[]{-18,234,-11,235});
    states[234] = new State(-25);
    states[235] = new State(new int[]{161,236});
    states[236] = new State(new int[]{59,237});
    states[237] = new State(-28);
    states[238] = new State(-7);
    states[239] = new State(new int[]{162,240});
    states[240] = new State(-14);
    states[241] = new State(-8);
    states[242] = new State(-9);
    states[243] = new State(-10);
    states[244] = new State(-11);
    states[245] = new State(-5);

    for (int sNo = 0; sNo < states.Length; sNo++) states[sNo].number = sNo;

    rules[1] = new Rule(-2, new int[]{-1,128});
    rules[2] = new Rule(-1, new int[]{-3});
    rules[3] = new Rule(-1, new int[]{});
    rules[4] = new Rule(-3, new int[]{-3,-4});
    rules[5] = new Rule(-3, new int[]{-4});
    rules[6] = new Rule(-4, new int[]{-5});
    rules[7] = new Rule(-4, new int[]{-6});
    rules[8] = new Rule(-4, new int[]{-7});
    rules[9] = new Rule(-4, new int[]{-8});
    rules[10] = new Rule(-4, new int[]{-9});
    rules[11] = new Rule(-4, new int[]{-10});
    rules[12] = new Rule(-5, new int[]{-11,161,59});
    rules[13] = new Rule(-7, new int[]{-11,161,61,-12,59});
    rules[14] = new Rule(-6, new int[]{133,162});
    rules[15] = new Rule(-8, new int[]{-11,161,40,-13,41,123,-14,125});
    rules[16] = new Rule(-9, new int[]{-11,161,40,-13,41,59});
    rules[17] = new Rule(-13, new int[]{-13,44,-15});
    rules[18] = new Rule(-13, new int[]{-15});
    rules[19] = new Rule(-13, new int[]{});
    rules[20] = new Rule(-15, new int[]{-11,161});
    rules[21] = new Rule(-15, new int[]{-11,161,61,-12});
    rules[22] = new Rule(-14, new int[]{-14,-16});
    rules[23] = new Rule(-14, new int[]{});
    rules[24] = new Rule(-17, new int[]{123,-14,125});
    rules[25] = new Rule(-10, new int[]{148,161,-18});
    rules[26] = new Rule(-19, new int[]{-19,-18});
    rules[27] = new Rule(-19, new int[]{});
    rules[28] = new Rule(-18, new int[]{-11,161,59});
    rules[29] = new Rule(-16, new int[]{59});
    rules[30] = new Rule(-16, new int[]{-20});
    rules[31] = new Rule(-16, new int[]{-21});
    rules[32] = new Rule(-16, new int[]{-22});
    rules[33] = new Rule(-16, new int[]{-23});
    rules[34] = new Rule(-16, new int[]{-24});
    rules[35] = new Rule(-16, new int[]{-25});
    rules[36] = new Rule(-16, new int[]{-26});
    rules[37] = new Rule(-16, new int[]{-27});
    rules[38] = new Rule(-16, new int[]{-28});
    rules[39] = new Rule(-16, new int[]{-17});
    rules[40] = new Rule(-16, new int[]{-12,59});
    rules[41] = new Rule(-20, new int[]{-11,-29,59});
    rules[42] = new Rule(-21, new int[]{-30,-31,-32});
    rules[43] = new Rule(-30, new int[]{146,40,-12,41,123,-14,125});
    rules[44] = new Rule(-30, new int[]{146,40,-12,41,-16});
    rules[45] = new Rule(-31, new int[]{143,146,40,-12,41,123,-14,125});
    rules[46] = new Rule(-31, new int[]{143,146,40,-12,41,-16});
    rules[47] = new Rule(-32, new int[]{143,123,-14,125});
    rules[48] = new Rule(-32, new int[]{143,-16});
    rules[49] = new Rule(-22, new int[]{147,59});
    rules[50] = new Rule(-22, new int[]{147,-12,59});
    rules[51] = new Rule(-26, new int[]{144,40,-12,41,123,-33,125});
    rules[52] = new Rule(-27, new int[]{138,59});
    rules[53] = new Rule(-28, new int[]{139,59});
    rules[54] = new Rule(-23, new int[]{192,40,-12,41});
    rules[55] = new Rule(-24, new int[]{142,123,-14,125,192,40,-12,41,59});
    rules[56] = new Rule(-25, new int[]{145,40,-12,59,-12,59,-12,41,123,-14,125});
    rules[57] = new Rule(-29, new int[]{-29,44,-34});
    rules[58] = new Rule(-29, new int[]{-34});
    rules[59] = new Rule(-34, new int[]{161});
    rules[60] = new Rule(-34, new int[]{161,61,-12});
    rules[61] = new Rule(-33, new int[]{-33,-35});
    rules[62] = new Rule(-33, new int[]{});
    rules[63] = new Rule(-35, new int[]{-36,-37});
    rules[64] = new Rule(-35, new int[]{});
    rules[65] = new Rule(-36, new int[]{-33,-38});
    rules[66] = new Rule(-36, new int[]{});
    rules[67] = new Rule(-38, new int[]{140,-12,58});
    rules[68] = new Rule(-38, new int[]{141,58});
    rules[69] = new Rule(-37, new int[]{-37,-16});
    rules[70] = new Rule(-37, new int[]{});
    rules[71] = new Rule(-39, new int[]{161,40,-40,41});
    rules[72] = new Rule(-40, new int[]{-40,44,-12});
    rules[73] = new Rule(-40, new int[]{-12});
    rules[74] = new Rule(-41, new int[]{-42,168,-12});
    rules[75] = new Rule(-41, new int[]{-42,169,-12});
    rules[76] = new Rule(-41, new int[]{-42,191,-12});
    rules[77] = new Rule(-41, new int[]{-42,170,-12});
    rules[78] = new Rule(-41, new int[]{-42,61,-12});
    rules[79] = new Rule(-12, new int[]{40,-12,41});
    rules[80] = new Rule(-12, new int[]{-41});
    rules[81] = new Rule(-12, new int[]{161});
    rules[82] = new Rule(-12, new int[]{-39});
    rules[83] = new Rule(-12, new int[]{-43});
    rules[84] = new Rule(-12, new int[]{-12,180,-12});
    rules[85] = new Rule(-12, new int[]{-12,179,-12});
    rules[86] = new Rule(-12, new int[]{-12,182,-12});
    rules[87] = new Rule(-12, new int[]{-12,181});
    rules[88] = new Rule(-12, new int[]{-12,183,-12});
    rules[89] = new Rule(-12, new int[]{-12,178,-12});
    rules[90] = new Rule(-12, new int[]{-12,177,-12});
    rules[91] = new Rule(-12, new int[]{-12,184,-12});
    rules[92] = new Rule(-12, new int[]{-12,173,-12});
    rules[93] = new Rule(-12, new int[]{-12,174,-12});
    rules[94] = new Rule(-12, new int[]{-12,175,-12});
    rules[95] = new Rule(-12, new int[]{-12,176,-12});
    rules[96] = new Rule(-12, new int[]{-12,187,-12});
    rules[97] = new Rule(-12, new int[]{-12,188,-12});
    rules[98] = new Rule(-12, new int[]{-12,186,-12});
    rules[99] = new Rule(-12, new int[]{-12,171,-12});
    rules[100] = new Rule(-12, new int[]{-12,172,-12});
    rules[101] = new Rule(-12, new int[]{-12,190,-12});
    rules[102] = new Rule(-12, new int[]{174,-12});
    rules[103] = new Rule(-12, new int[]{189,-12});
    rules[104] = new Rule(-12, new int[]{185,-12});
    rules[105] = new Rule(-12, new int[]{166,-42});
    rules[106] = new Rule(-12, new int[]{-42,166});
    rules[107] = new Rule(-12, new int[]{167,-42});
    rules[108] = new Rule(-12, new int[]{-42,167});
    rules[109] = new Rule(-12, new int[]{91,163,44,163,44,163,93});
    rules[110] = new Rule(-12, new int[]{-42});
    rules[111] = new Rule(-43, new int[]{165});
    rules[112] = new Rule(-43, new int[]{164});
    rules[113] = new Rule(-43, new int[]{163});
    rules[114] = new Rule(-43, new int[]{162});
    rules[115] = new Rule(-43, new int[]{134});
    rules[116] = new Rule(-43, new int[]{135});
    rules[117] = new Rule(-43, new int[]{136});
    rules[118] = new Rule(-43, new int[]{137});
    rules[119] = new Rule(-11, new int[]{149});
    rules[120] = new Rule(-11, new int[]{150});
    rules[121] = new Rule(-11, new int[]{151});
    rules[122] = new Rule(-11, new int[]{152});
    rules[123] = new Rule(-11, new int[]{153});
    rules[124] = new Rule(-11, new int[]{154});
    rules[125] = new Rule(-11, new int[]{155});
    rules[126] = new Rule(-11, new int[]{156});
    rules[127] = new Rule(-11, new int[]{157});
    rules[128] = new Rule(-11, new int[]{158});
    rules[129] = new Rule(-11, new int[]{160});
    rules[130] = new Rule(-11, new int[]{159});
    rules[131] = new Rule(-11, new int[]{148,161});
    rules[132] = new Rule(-42, new int[]{161});
    rules[133] = new Rule(-42, new int[]{161,46,161});
    rules[134] = new Rule(-42, new int[]{-42,46,161});
  }

  protected override void Initialize() {
    this.InitSpecialTokens((int)Token.error, (int)Token.EOF);
    this.InitStates(states);
    this.InitRules(rules);
    this.InitNonTerminals(nonTerms);
  }

  protected override void DoAction(int action)
  {
#pragma warning disable 162, 1522
    switch (action)
    {
      case 2: // compilation_unit -> declarations
{ CurrentSemanticValue.node = new CompilationUnit((List<ASTNode>)ValueStack[ValueStack.Depth-1].node); }
        break;
      case 3: // compilation_unit -> /* empty */
{ CurrentSemanticValue.node = new CompilationUnit(); }
        break;
      case 4: // declarations -> declarations, declaration
{ CurrentSemanticValue.node = ValueStack[ValueStack.Depth-2].node; var node = (ASTNode)ValueStack[ValueStack.Depth-2].node; ((List<ASTNode>)CurrentSemanticValue.node).Add(node); }
        break;
      case 5: // declarations -> declaration
{ CurrentSemanticValue.node = new List<ASTNode>() { (ASTNode)ValueStack[ValueStack.Depth-1].node }; }
        break;
      case 6: // declaration -> global_variable_declaration
{ CurrentSemanticValue.node = ValueStack[ValueStack.Depth-1].node; }
        break;
      case 7: // declaration -> script_inclusion
{ CurrentSemanticValue.node = ValueStack[ValueStack.Depth-1].node; }
        break;
      case 8: // declaration -> global_variable_initialization
{ CurrentSemanticValue.node = ValueStack[ValueStack.Depth-1].node; }
        break;
      case 9: // declaration -> function_definition
{ CurrentSemanticValue.node = ValueStack[ValueStack.Depth-1].node; }
        break;
      case 10: // declaration -> function_forward_declaration
{ CurrentSemanticValue.node = ValueStack[ValueStack.Depth-1].node; }
        break;
      case 11: // declaration -> struct_definition
{ CurrentSemanticValue.node = ValueStack[ValueStack.Depth-1].node; }
        break;
      case 12: // global_variable_declaration -> data_type, IDENTIFIER, ';'
{ CurrentSemanticValue.node = new GlobalVariableDeclaration(ValueStack[ValueStack.Depth-3].datatype, ValueStack[ValueStack.Depth-2].text); }
        break;
      case 13: // global_variable_initialization -> data_type, IDENTIFIER, '=', expression, ';'
{ ; }
        break;
      case 14: // script_inclusion -> INCLUDE, LITERAL_STRING
{ ; }
        break;
      case 16: // function_forward_declaration -> data_type, IDENTIFIER, '(', 
               //                                 function_definition_params, ')', ';'
{ ; }
        break;
      case 17: // function_definition_params -> function_definition_params, ',', 
               //                               function_definition_param
{ ; }
        break;
      case 18: // function_definition_params -> function_definition_param
{ ; }
        break;
      case 19: // function_definition_params -> /* empty */
{ ; }
        break;
      case 20: // function_definition_param -> data_type, IDENTIFIER
{ ; }
        break;
      case 21: // function_definition_param -> data_type, IDENTIFIER, '=', expression
{ ; }
        break;
      case 25: // struct_definition -> TYPE_STRUCT, IDENTIFIER, struct_member
{ ; }
        break;
      case 26: // struct_members -> struct_members, struct_member
{ ; }
        break;
      case 27: // struct_members -> /* empty */
{ ; }
        break;
      case 28: // struct_member -> data_type, IDENTIFIER, ';'
{ ; }
        break;
      case 79: // expression -> '(', expression, ')'
{ ; }
        break;
      case 80: // expression -> assignment
{ ; }
        break;
      case 81: // expression -> IDENTIFIER
{ ; }
        break;
      case 82: // expression -> function_call
{ ; }
        break;
      case 83: // expression -> constant_expression
{ ; }
        break;
      case 111: // constant_expression -> LITERAL_INT
{ CurrentSemanticValue.node = new IntLiteralExpression(ValueStack[ValueStack.Depth-1].numberi); }
        break;
      case 119: // data_type -> TYPE_INT
{ ; }
        break;
      case 120: // data_type -> TYPE_FLOAT
{ ; }
        break;
      case 121: // data_type -> TYPE_OBJECT
{ ; }
        break;
      case 122: // data_type -> TYPE_VOID
{ ; }
        break;
      case 123: // data_type -> TYPE_EVENT
{ ; }
        break;
      case 124: // data_type -> TYPE_EFFECT
{ ; }
        break;
      case 125: // data_type -> TYPE_ITEM_PROPERTY
{ ; }
        break;
      case 126: // data_type -> TYPE_LOCATION
{ ; }
        break;
      case 127: // data_type -> TYPE_STRING
{ ; }
        break;
      case 128: // data_type -> TYPE_TALENT
{ ; }
        break;
      case 129: // data_type -> TYPE_VECTOR
{ ; }
        break;
      case 130: // data_type -> TYPE_ACTION
{ ; }
        break;
      case 131: // data_type -> TYPE_STRUCT, IDENTIFIER
{ ; }
        break;
      case 132: // field_access -> IDENTIFIER
{ CurrentSemanticValue.node = new FieldAccess(ValueStack[ValueStack.Depth-1].text); }
        break;
      case 133: // field_access -> IDENTIFIER, '.', IDENTIFIER
{ CurrentSemanticValue.node = new FieldAccess(ValueStack[ValueStack.Depth-3].text, ValueStack[ValueStack.Depth-1].text); }
        break;
      case 134: // field_access -> field_access, '.', IDENTIFIER
{ CurrentSemanticValue.node = new FieldAccess((FieldAccess)ValueStack[ValueStack.Depth-3].node, ValueStack[ValueStack.Depth-1].text); }
        break;
    }
#pragma warning restore 162, 1522
  }

  protected override string TerminalToString(int terminal)
  {
    if (aliases != null && aliases.ContainsKey(terminal))
        return aliases[terminal];
    else if (((Token)terminal).ToString() != terminal.ToString(CultureInfo.InvariantCulture))
        return ((Token)terminal).ToString();
    else
        return CharToString((char)terminal);
  }

}
}
